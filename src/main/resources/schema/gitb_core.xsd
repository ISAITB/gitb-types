<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xsd:schema xmlns="http://www.gitb.com/core/v1/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.gitb.com/core/v1/" elementFormDefault="qualified" version="1.0">
	<xsd:element name="module" type="TestModule"/>
	<!--General Metadata element to describe the metadata of artifacts-->
	<xsd:simpleType name="ID">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[a-zA-Z0-9_\-]+"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Metadata">
		<xsd:all>
			<xsd:element name="name" type="xsd:string"/>
			<xsd:element name="type" type="TestCaseType" minOccurs="0"/>
			<xsd:element name="version" type="xsd:string"/>
			<xsd:element name="authors" type="xsd:string" minOccurs="0"/>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="published" type="xsd:string" minOccurs="0"/>
			<xsd:element name="lastModified" type="xsd:string" minOccurs="0"/>
			<xsd:element name="documentation" type="Documentation" minOccurs="0"/>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="ActorConfiguration">
		<xsd:sequence>
			<xsd:element name="config" type="Configuration" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="actor" type="xsd:string" use="required"/>
		<xsd:attribute name="endpoint" type="xsd:string"/>
	</xsd:complexType>
	<!-- List of Actor Definitions-->
	<xsd:complexType name="Actors">
		<xsd:sequence>
			<xsd:element name="actor" type="Actor" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- Complete Definition of an Actor-->
	<xsd:complexType name="Actor">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" minOccurs="0"/>
			<xsd:element name="desc" type="xsd:string" minOccurs="0"/>
			<xsd:element name="endpoint" type="Endpoint" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="ID" use="required"/>
		<xsd:attribute name="default" type="xsd:boolean" default="false"/>
		<xsd:attribute name="hidden" type="xsd:boolean" default="false"/>
		<xsd:attribute name="displayOrder" type="xsd:short"/>
	</xsd:complexType>
	<!--Endpoint definition-->
	<xsd:complexType name="Endpoint">
		<xsd:sequence>
			<xsd:element name="config" type="EndpointParameter" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="ID" use="required"/>
		<xsd:attribute name="desc" type="xsd:string"/>
	</xsd:complexType>
	<!-- List of Testcase Role Definitions-->
	<xsd:complexType name="Roles">
		<xsd:sequence>
			<xsd:element name="actor" type="TestRole" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!--List of Testcase Role definition-->
	<xsd:complexType name="TestRole">
		<xsd:sequence>
			<xsd:element name="endpoint" type="Endpoint" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required"/>
		<xsd:attribute name="name" type="xsd:string"/>
		<xsd:attribute name="role" type="TestRoleEnumeration" default="SIMULATED"/>
		<xsd:attribute name="displayOrder" type="xsd:short"/>
	</xsd:complexType>
	<!-- Configuration name-value pair -->
	<xsd:complexType name="Configuration">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="name" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<!-- Abstract TestModule definition -->
	<xsd:complexType name="TestModule">
		<xsd:complexContent>
			<xsd:extension base="BaseTestModule">
				<xsd:sequence>
					<xsd:element name="inputs" type="TypedParameters" minOccurs="0"/>
					<xsd:element name="outputs" type="TypedParameters" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- Abstract BaseTestModule definition -->
	<xsd:complexType name="BaseTestModule">
		<xsd:sequence>
			<xsd:element name="metadata" type="Metadata"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string"/>
		<xsd:attribute name="uri" type="xsd:string"/>
		<xsd:attribute name="isRemote" type="xsd:boolean" default="true"/>
		<xsd:attribute name="serviceLocation" type="xsd:string"/>
	</xsd:complexType>
	<!-- Validation Module Definition-->
	<xsd:complexType name="ValidationModule">
		<xsd:complexContent>
			<xsd:extension base="TestModule">
				<xsd:sequence>
					<xsd:element name="configs" type="ConfigurationParameters" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="operation" type="xsd:string"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--Messaging Module Definition-->
	<xsd:complexType name="MessagingModule">
		<xsd:complexContent>
			<xsd:extension base="TestModule">
				<xsd:sequence>
					<xsd:element name="actorConfigs" type="ConfigurationParameters"/>
					<xsd:element name="transactionConfigs" type="ConfigurationParameters" minOccurs="0"/>
					<xsd:element name="listenConfigs" type="ConfigurationParameters" minOccurs="0"/>
					<xsd:element name="receiveConfigs" type="ConfigurationParameters" minOccurs="0"/>
					<xsd:element name="sendConfigs" type="ConfigurationParameters" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="isProxy" type="xsd:boolean" default="true"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--List of configuration parameters-->
	<xsd:complexType name="ConfigurationParameters">
		<xsd:sequence>
			<xsd:element name="param" type="Parameter" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!--List of typed paremeters-->
	<xsd:complexType name="TypedParameters">
		<xsd:sequence>
			<xsd:element name="param" type="TypedParameter" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!--Parameter Definition-->
	<xsd:complexType name="EndpointParameter">
		<xsd:simpleContent>
			<xsd:extension base="Parameter">
				<xsd:attribute name="adminOnly" type="xsd:boolean" default="false"/>
				<xsd:attribute name="notForTests" type="xsd:boolean" default="false"/>
				<xsd:attribute name="hidden" type="xsd:boolean" default="false"/>
				<xsd:attribute name="dependsOn" type="xsd:string"/>
				<xsd:attribute name="dependsOnValue" type="xsd:string"/>
				<xsd:attribute name="allowedValues" type="xsd:string"/>
				<xsd:attribute name="allowedValueLabels" type="xsd:string"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="Parameter">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="name" type="xsd:string" use="required"/>
				<xsd:attribute name="label" type="xsd:string"/>
				<xsd:attribute name="use" type="UsageEnumeration" default="R"/>
				<xsd:attribute name="kind" type="ConfigurationType" default="SIMPLE"/>
				<xsd:attribute name="desc" type="xsd:string"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<!--Typed parameter definition-->
	<xsd:complexType name="TypedParameter">
		<xsd:simpleContent>
			<xsd:extension base="Parameter">
				<xsd:attribute name="type" type="xsd:string" use="required"/>
				<xsd:attribute name="encoding" type="xsd:string"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
    <!-- Enumeration for test case types-->
    <xsd:simpleType name="TestCaseType">
        <xsd:restriction base="xsd:NMTOKEN">
            <xsd:enumeration value="CONFORMANCE"/>
            <xsd:enumeration value="INTEROPERABILITY"/>
        </xsd:restriction>
    </xsd:simpleType>
	<!-- Enumeration for usage indicator-->
	<xsd:simpleType name="UsageEnumeration">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="R"/>
			<xsd:enumeration value="O"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Restriction for a number that can also be a variable reference -->
	<xsd:simpleType name="NumberOrVariable">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="($[a-zA-Z][a-zA-Z\-_0-9]*(\{[${}a-zA-Z\-._0-9]*\})?)|([-+]?\d+(\.\d+)|\d*)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Restriction for a string that can also be a variable reference -->
	<xsd:simpleType name="StringOrVariable">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="($[a-zA-Z][a-zA-Z\-_0-9]*(\{[${}a-zA-Z\-._0-9]*\})?)|([^\t\n\r]+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Restriction for a boolean that can also be a variable reference -->
	<xsd:simpleType name="BooleanOrVariable">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="($[a-zA-Z][a-zA-Z\-_0-9]*(\{[${}a-zA-Z\-._0-9]*\})?)|(true)|(TRUE)|(false)|(FALSE)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Enumeration for usage indicator-->
	<xsd:simpleType name="ConfigurationType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="SIMPLE"/>
			<xsd:enumeration value="BINARY"/>
			<xsd:enumeration value="SECRET"/>
			<!-- simple type, i.e. string -->
			<!-- binary type -->
		</xsd:restriction>
	</xsd:simpleType>
	<!--Representation (serialization) of a GITB value -->
	<xsd:complexType name="AnyContent">
		<xsd:sequence>
			<xsd:element name="item" type="AnyContent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="value" type="StringUriOrBase64Type" minOccurs="0" maxOccurs="1" />
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string"/>
		<xsd:attribute name="embeddingMethod" type="ValueEmbeddingEnumeration" default="BASE64"/>
		<xsd:attribute name="type" type="xsd:string"/>
		<xsd:attribute name="encoding" type="xsd:string"/>
		<xsd:attribute name="mimeType" type="xsd:string"/>
		<xsd:attribute name="forContext" type="xsd:boolean" default="true"/>
		<xsd:attribute name="forDisplay" type="xsd:boolean" default="true"/>
	</xsd:complexType>
	<!-- Enumeration for embedding method for the value -->
	<xsd:simpleType name="ValueEmbeddingEnumeration">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="STRING"/>
			<xsd:enumeration value="BASE64"/>
			<xsd:enumeration value="URI"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Type definition for the actual content-->
	<xsd:simpleType name="StringUriOrBase64Type">
		<xsd:union memberTypes="xsd:string xsd:base64Binary xsd:anyURI"/>
	</xsd:simpleType>
	<!-- Enumeration for representing the format of the given content-->
	<xsd:simpleType name="TestRoleEnumeration">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="SUT"/>
			<xsd:enumeration value="SIMULATED"/>
			<xsd:enumeration value="MONITOR"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Enumeration indicating the status of a test step execution-->
	<xsd:simpleType name="StepStatus">
		<xsd:restriction base="xsd:NMTOKEN">
			<xsd:enumeration value="PROCESSING"/>
			<xsd:enumeration value="SKIPPED"/>
			<xsd:enumeration value="WAITING"/>
			<xsd:enumeration value="ERROR"/>
			<xsd:enumeration value="WARNING"/>
			<xsd:enumeration value="COMPLETED"/>
		</xsd:restriction>
	</xsd:simpleType>
    <xsd:simpleType name="ErrorCode">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="ACTOR_DEFINITION_NOT_FOUND"/>
            <xsd:enumeration value="ARTIFACT_NOT_FOUND"/>
            <xsd:enumeration value="CANCELLATION" />
            <xsd:enumeration value="DATATYPE_ERROR" />
            <xsd:enumeration value="INTERNAL_ERROR"/>
            <xsd:enumeration value="INVALID_SESSION" />
            <xsd:enumeration value="INVALID_TEST_CASE" />
            <xsd:enumeration value="MISSING_CONFIGURATION" />
            <xsd:enumeration value="INVALID_CONFIGURATION" />
            <xsd:enumeration value="TEST_CASE_DEFINITION_NOT_FOUND"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:complexType name="ErrorInfo">
        <xsd:sequence>
            <xsd:element name="errorCode" type="ErrorCode" />
            <xsd:element name="description" type="xsd:string" />
        </xsd:sequence>
    </xsd:complexType>
	<xsd:complexType name="Documentation">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="from" type="xsd:string"/>
				<xsd:attribute name="import" type="xsd:string"/>
				<xsd:attribute name="encoding" type="xsd:string"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:simpleType name="InputRequestInputType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="UPLOAD"/>
			<xsd:enumeration value="TEXT"/>
			<xsd:enumeration value="MULTILINE_TEXT"/>
			<xsd:enumeration value="SECRET"/>
			<xsd:enumeration value="CODE"/>
			<xsd:enumeration value="SELECT_SINGLE"/>
			<xsd:enumeration value="SELECT_MULTIPLE"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="LogLevel">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="ERROR"/>
			<xsd:enumeration value="WARNING"/>
			<xsd:enumeration value="INFO"/>
			<xsd:enumeration value="DEBUG"/>
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>
